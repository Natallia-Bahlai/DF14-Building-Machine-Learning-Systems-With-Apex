<apex:page showHeader="true" sidebar="true" standardController="Clustering_Run__c" extensions="KMeansPlaybackController">
	<div id="chart">
	</div>
	<apex:stylesheet value="{!URLFOR($Resource.c3sfdc, 'c3sfdc/c3.css')}"/>
	<apex:includeScript value="{!URLFOR($Resource.c3sfdc, 'c3sfdc/d3.min.js')}"/>
	<apex:includeScript value="{!URLFOR($Resource.c3sfdc, 'c3sfdc/c3.min.js')}"/>
	<script type="text/javascript">

		var data = {!initialData};
		console.log(data);
		var colData = [];
		var colMap = {};
		var lineMap = {};
		var centroidMap = {};
		var current = 2;

		for(var key in data){
			if(data.hasOwnProperty(key)){
				console.log(key);
				var tmpCol = [];
				tmpCol.push(key);
				var dataSet = tmpCol.concat(data[key]);
				colData.push(dataSet);

				if(key.indexOf('Assigned') == -1){
					centroidMap[key] = dataSet;
				}

				if(key.indexOf('x') == -1){
					colMap[key] = key + ' x';
					if(key.indexOf('Assigned') == -1){
						lineMap[key] = 'line';
					}
				}
			}
		}

		var chart = c3.generate({
		  bindto: '#chart',
		  data: {
		  	xs: colMap,
				columns: colData,
		  	type: 'scatter',
		  	types: lineMap
		  },
		  size: {width:1000, height:1000},
		  axis: { x: {show: false }, y: { show: false } }
		});

		var runTime = function (centroids) {
			console.log('Loading set ' + current);
			Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.KMeansPlaybackController.getAssignmentsForIteration}', current, '{!clusterId}',
        function(result, event){
        	console.log('Loaded ' + current);
          if (event.status) {
          	var newColData = [];
            for(var key in result){
							if(result.hasOwnProperty(key)){
								if(key.indexOf('Assigned') == -1){
									centroids[key].push(result[key]);
									var tmpCol = [];
									var dataSet = tmpCol.concat(centroids[key]);
									newColData.push(dataSet);
								}
								else{
									var tmpCol = [];
									tmpCol.push(key);
									var dataSet = tmpCol.concat(result[key]);
									newColData.push(dataSet);
								}
							}
						}
            chart.load({
			        columns: newColData
			    	});
          } else if (event.type === 'exception') {
              document.getElementById("responseErrors").innerHTML = event.message;
          } else {
              document.getElementById("responseErrors").innerHTML = event.message;
          }
        }, 
        {escape: true}
	    );
	    
	    current++;
	    if(current == 11) {
	    	clearInterval(intervalFunc);
	    }
		}

		var intervalFunc = setInterval(function(){runTime(centroidMap)}, 3000);

	</script>
</apex:page>